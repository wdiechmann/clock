- months = %w{ dummy januar februar marts april maj juni juli august september november december}
- h3_flag = false

:css
  @media print {
    .nav-pills, .save_it, .alert, .pill {
      display: none;
    }


    h3 {
      page-break-before: always;
    }
    button { display: none !important; }
    .alert { display: none !important; }
    .sick.selected, .sick.new_selected { background-color: #CC0C39 !important; }
    .absent.selected, .absent.new_selected { background-color: #1693A7 !important; }
    .unaccounted.selected, .unaccounted.new_selected { background-color: #E6781E !important; }
    .holiday.selected, .holiday.new_selected { background-color: #C8CF02 !important; }
    .free.selected, .free.new_selected { background-color: #98CF02 !important; }
    tr.entrance td { width: 75px; height: 20px !important }
  }
  tr.entrance td { width: 75px; height: 30px }
  .sick.selected, .sick.new_selected { background-color: #CC0C39 }
  .absent.selected, .absent.new_selected { background-color: #1693A7 }
  .unaccounted.selected, .unaccounted.new_selected { background-color: #E6781E }
  .holiday.selected, .holiday.new_selected { background-color: #C8CF02 }
  .free.selected, .free.new_selected { background-color: #98CF02 }
  img.signature { src: asset_url(images/klitmoller.jpg)}

  @page {
    size:  21.0cm 29.5cm;
  }

  @media screen {
    .employee_tabbed_panel {
      position: absolute;
      top: 0px;
      left: 1px;
      display: none;
    }
    .employees_panels {
      position: relative;
    }
    .save_it, .alert {
      display: none;
    }
    .pill {
      cursor: pointer
    }
    .nav-pills { margin-bottom: 20px; }
  }


%button.print_it.btn.btn-primary= 'Udskriv'
%button.save_it.btn.btn-warning= 'Gem'

.alert
  .alert-info
    #status_of_employees

- employee_flag = @employees.first
%ul.nav.nav-pills
  - @employees.each do  |employee|
    %li{ class: "pill #{'active' if employee_flag == employee && employee_flag=employee}"}
      %a.show_employee_tab{ id: "employee_tab_#{employee.id}"}= employee.name

.employees_panels
  - @employees.each do |employee|
    .employee_tabbed_panel{ id: "employee_tabbed_panel_#{employee.id}"}
      %h1
      - if h3_flag
        %h3

      - h3_flag = true unless h3_flag

      %table{ style: "width: 525px"}
        %tr
          %td{ colspan: 2, style: "width: 100%; font-size: 1.5em; height: 30px !important"}
            = employee.name

        %tr
          %td{ style: "width: 75%;"}
            født:
            = show_date employee.born_at
          %td{ style: "width: 25%;"}
            måned:
            = months[ @month_range.first.to_date.month]

      %h2

      %table.table-bordered
        %thead
          %td dato
          %td mødt
          %td syg
          %td fravær
          %td ikk acc. fravær
          %td ferie
          %td fri iflg aftale

        %tbody
          - list_every_day(employee, @month_range) do |day,entrance|
            %tr.entrance{ id: "employee_#{employee.id}_date_#{@month_range.first.month}_#{day}_entrance_#{ entrance.id rescue '0'}"}
              %td
                = day
              %td.present
                = entrance.clocked_at.strftime "%H:%M" if (entrance && entrance.entrance_type == PRESENT)
              %td.sick{ class: "#{'selected' if entrance && entrance.entrance_type == SICK}"}
              %td.absent{ class: "#{'selected' if entrance && entrance.entrance_type == ABSENT}"}
              %td.unaccounted{ class: "#{'selected' if entrance && entrance.entrance_type == UNACCOUNTED}"}
              %td.holiday{ class: "#{'selected' if entrance &&  entrance.entrance_type == HOLIDAY}"}
              %td.free{ class: "#{'selected' if entrance &&  entrance.entrance_type == FREE}"}

      %h2


  #entrance_modal.modal.fade{ tabindex:"-1", role:"dialog", :"aria-labelledby"=>"entranceTitle", :"aria-hidden"=>"true" }
    .modal-dialog
      .modal-content
        .modal-header
          %button{ type:"button", class:"close", :"data-dismiss"=>"modal", :"aria-label"=>"Close"}
            %span{ :"aria-hidden"=>"true"} &times;
          %h4.modal-title{ id: "entranceTitle"}	Stempelur for

        .modal-body
          %form
            .form-group
              %input.entrance_employee_id{ type:"hidden", id:"entrance_employee_id", name: "entrance[employee_id]"}

            .form-group
              %label{ for:"entrance_date", class:"control-label"} Dato:
              %input.entrance_date{ type:"text",  autofocus: "autofocus", class:"form-control", name: "entrance[date]", id:"entrance_date"}


            .form-group
              %label{ for:"entrance_time", class:"control-label"} Kl:
              %input.entrance_time{ type:"text", class:"form-control", name: "entrance[time]", id:"entrance_time", placeholder: '23.59'}

        .modal-footer
          %a.btn.btn-default{ type:"button", :"data-dismiss"=>"modal"} Fortryd
          %a.btn.btn-primary{ type:"button", id: "send_entrance"} Send


:coffeescript

  update_entrances = false
  employee_to_edit = null
  date_to_edit = null
  element_to_edit = null

  # props
  #   employee_employee.id_date_@month_range.first.month_day_entrance_entrance.id
  #   employee,1,date,1,1,entrance,2
  #

  $($('.employee_tabbed_panel')[0]).show()


  #
  # set focus on modal
  #
  $('#entrance_modal').on 'shown.bs.modal', () ->
    $('.entrance_time').focus()

  #
  # show modal on empty .present TD's
  #
  accept_entrance = (t_,elem,props) ->
    $(t_).addClass('inserted')
    element_to_edit = t_
    $('#entrance_modal').modal()
    $('.modal-title').text( $('.modal-title').text() + ' ' + $('li.pill.active a').text() )
    employee_to_edit = props[1]
    $('.entrance_employee_id').val(props[1])
    today = new Date()
    date_to_edit = new Date( props[3] + '/' + props[4] + '/' + today.getFullYear().toString()  )
    $('.entrance_date').val(date_to_edit.toLocaleDateString())

  #
  # respond to save on empty TD modal
  #
  $('#send_entrance').on 'click', (e) ->
    date = $('.entrance_date').val().split("/")
    time = $('.entrance_time').val().split(".")
    # date_to_edit = new Date( date[1] + '-' + date[0] + '-' + date[2] + ' ' + time[0] + ':' + time[1] )
    date_to_edit = date[0] + '-' + date[1] + '-' + date[2] + ' ' + time[0] + ':' + time[1]
    # console.log date_to_edit.toString()
    # console.log date_to_edit.toLocaleString()
    # console.log date_to_edit.toGMTString()
    # console.log date_to_edit.toISOString()

    data = { 'entrance': { 'employee_id': employee_to_edit, 'clocked_at': date_to_edit } }
    jqxhr = $.ajax(
      url: '/entrances.js'
      type: 'POST'
      dataType: 'script'
      data: data
    ).done( () ->
      $('#entrance_modal').modal('hide')
      $(element_to_edit).text( time[0] + ':' + time[1] )
    ).fail () ->
      $('#status_of_employees').html(jqxhr.responseText)


  #
  # send all changes on page
  #
  post_changes = (url,data,$elem) ->
    if !update_entrances
      window.print() if $elem.hasClass('print_it')
    else
    	jqxhr = $.ajax(
        url: url
        type: 'POST'
        dataType: 'script'
        data: data
      ).done( () ->
        update_entrances = false
        $('#status_of_employees').html('Alle stemplinger opdateret!')
        $('.alert').show()
        $('button.save_it').hide()
        window.print() if $elem.hasClass('print_it')
      ).fail () ->
        $('#status_of_employees').html(jqxhr.responseText)

  #
  # move to this tab
  #
  $('li.pill').on 'click', (e) ->
    $('li.pill').removeClass('active')
    $(this).addClass('active')
    prop = $(this).find('a').prop('id').split("_")
    $('.employee_tabbed_panel').hide()
    $('#employee_tabbed_panel_'+prop[prop.length-1]).show()

  #
  # respond to buttons print and save
  #
  $('.print_it,.save_it').on 'click', (e) ->
    data = { 'multi': true, 'elems': [] }
    for elem in $('.deleted, .selected')
      do(elem) ->
        #
        # employee_1_date_1_9_entrance_0
        prop = $(elem).closest('tr').prop('id').split("_")
        data.elems.push { type: $(elem).prop('class'), employee: prop[1], month: prop[3], day: prop[4], entrance: prop[6] }
    post_changes('/entrances.js',data,$(e.target))

  #
  # respond to click in .present TD's
  #
  $('.present').on 'click', (e) ->
    prop = $(e.target).closest('tr').prop('id').split("_")
    if prop[prop.length-1]!="0"
      update_entrances = true
      $('.alert').show()
      $('button.save_it').show()
      $('#status_of_employees').html('husk at trykke GEM - når du er færdig med at rette!')
      $(this).addClass('deleted')
      if $(this).text()!=""
        $(this).text('')
    else
      accept_entrance(this,e.target,prop)

  #
  # respond to click in .sick, .absent, .unaccounted, .holiday, .free TD's
  #
  for selector in [ '.sick', '.absent', '.unaccounted', '.holiday', '.free']
    do(selector) ->
      $(selector).on 'click', (e) ->
        $('.alert').show()
        $('button.save_it').show()
        $('#status_of_employees').html('husk at trykke GEM - når du er færdig med at rette!')
        update_entrances = true
        prop = $(e.target).closest('tr').prop('id').split("_")
        if $(this).hasClass('selected')
          $(this).removeClass('selected')
          if prop[prop.length-1]!="0"
            $(this).addClass('deleted')
        else
          $(this).addClass('selected')
          if prop[prop.length-1]!="0"
            $(this).removeClass('deleted')
